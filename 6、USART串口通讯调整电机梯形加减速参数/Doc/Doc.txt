##**********************************************2023/03/24*********************************************##
##要实现PC端发送命令，MCU接收并处理命令，需要学习串口通信，UART？USART？IIC？SPI？
##通信协议通过代码实现的原理？
##Modbus这种上层协议又是如何通过UART，USART，IIC，SPI，这种硬件层板级通信协议实现的？
##下礼拜，也就是2023/03/27，深刻掌握通信协议的原理和实现方法。
##*****************************************************************************************************##

##**********************************************2023/03/31*********************************************##
##今天最后几分钟改了中断优先级，让定时器中断输出PWM优先级大于串口中断，
##还未验证是否是这个原因导致的串口改了Motor_Move()数据但是电机不转，
##下礼拜再验证一下。
##*****************************************************************************************************##

##**********************************************2023/04/03*********************************************##
##找到原因了！！！
int main(void)
{
	Motor_Init();
	USART1_Init(115200);
    GPIO_SetBits(GPIOD,GPIO_Pin_2);
	while(1)
		{
			if(serial_status == 1)
				{	
				Motor_Move(1,64000,4000,4000,4000);
				serial_status = 0;
				}		
		}
}
逐步排查，这样写，程序提前打开了ENA口，导致无法运行电机。

int main(void)
{
	Motor_Init();
	USART1_Init(115200);
	while(1)
		{
			if(serial_status == 1)
				{
				GPIO_SetBits(GPIOD,GPIO_Pin_2);				
				Motor_Move(1,64000,4000,4000,4000);
				serial_status = 0;
				}		
		}
}
这样写，程序可以正常运行，故将原来的程序
int main(void)
{
	Motor_Init();
	USART1_Init(115200);
	GPIO_SetBits(GPIOD,GPIO_Pin_2);
	Motor_Move(1,64000,4000,4000,4000);
	while(1)
		{
			if(serial_status == 1)
				{	
					Motor_Move(data.dirtemp1,data.step1,data.accel1,data.decel1,data.speed1);
					serial_status = 0;
				}		
		}
}
变为
int main(void)
{
	Motor_Init();
	USART1_Init(115200);
	Motor_Move(1,64000,4000,4000,4000);
	while(1)
		{
			if(serial_status == 1)
				{	
					GPIO_SetBits(GPIOD,GPIO_Pin_2);
					Motor_Move(data.dirtemp1,data.step1,data.accel1,data.decel1,data.speed1);
					serial_status = 0;
				}		
		}
}
程序正常运行！参数可随意修改！




零散小知识：   #include "stdlib.h"――――――atio atol atof 字符串转换整数.长整数.浮点型函数头文件(没用到)
##*****************************************************************************************************##